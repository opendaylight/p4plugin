syntax = "proto3";

import "google/protobuf/any.proto";
import "google/rpc/status.proto";
import "p4/config/p4info.proto";

option java_multiple_files = true;
option java_package = "org.opendaylight.p4plugin.appruntime.proto";
option java_outer_classname = "AppRuntimeProto";

package App;

service AppRuntime {
    rpc SetPipelineConfig(SetPipelineConfigRequest) returns (SetipelineConfigResponse) {}
    rpc GetPipelineConfig(GetPipelineConfigRequest) returns (GetPipelineConfigResponse) {}
    rpc WriteTableEntry(WriteTableEntryRequest) returns (WriteTableEntryResponse) {}
    rpc ReadTableEntry(ReadTableEntryRequest) returns (stream ReadTableEntryResponse) {}
}



message Node {
    string node_id = 1;
    string ip = 2;
    uint32 port = 3;
    string device_id = 3;
    string device_config_file;
    string runtime_info_file;
}

message GetPipelineConfigResponse {}
message SetPipelineConfigRequest {}
message SetipelineConfigResponse {}
message ReadTableEntryRequest {}
message ReadTableEntryResponse {}
message WriteTableEntryResponse {}

message WriteTableEntryRequest {
    string node_id = 1;  //We recommend to use Manufacturer:Model:Version:Identifier;
    enum Type {
        UNSPECIFIED = 0;
        INSERT = 1;
        MODIFY = 2;
        DELETE = 3;
    }
    Type type = 2;
    TableEntry entry = 3;
}

message TableEntry {
    string table_name = 1;
    repeated Key key = 2;
    Action action = 3;
}

message Key {
    string field_name = 1;
    message Exact {
        bytes value = 1;
    }

    message Lpm {
        int32 prefix_len = 1;
        bytes value = 2;
    }

    oneof match_type {
        Exact exact = 2;
        Lpm lpm = 3;
    }
}

message Action {
    message DirectAction {
        string action_name = 1;
        message Param {
            string param_name = 2;
            bytes value = 3;
        }
        repeated Param params = 4;
    }

    message ActionProfileMember {
        uint32 action_profile_member_id = 1;
    }

    message ActionProfileGroup {
        uint32 action_profile_group_id = 1;
    }

    oneof action_type {
        DirectAction direct_action = 1;
        ActionProfileMember member = 2;
        ActionProfileGroup group = 3;
    }
}

//message Ipv4LpmEntry {
//    message Match {
//        LPM64 ipv4_dstAddr = 1;
//        uint32 test = 2;
//    }
//    Match match = 1;
//    oneof Action {
//        SetNhop set_nhop = 2;
//        Drop drop = 3;
//    }
//}
//
//message SendFrameEntry {
//    message Match {
//        uint32 standard_metadata_egress_port = 1;
//    }
//    Match match = 1;
//    oneof Action {
//        RewriteMac rewrite_mac = 2;
//        Drop drop = 3;
//    }
//}
//
//message ForwardEntry {
//    message Match {
//        uint64 routing_metadata_nhop_ipv4 = 1;
//    }
//    Match match = 1;
//    oneof Action {
//        SetDmac set_dmac = 2;
//        Drop drop = 3;
//    }
//}
//
//message Drop {}
//message SetNhop {
//    uint32 nhop_ipv4 = 1;
//    uint32 port = 2;
//}
//
//message SetDmac {
//    uint64 dmac = 1;
//}
//
//message RewriteMac {
//    uint64 smac = 1;
//}
//
//message LPM64 {
//    uint64 value = 1;
//    uint32 prefix_len = 2;
//}
